version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_LOG4J_PROP: WARN
    volumes:
      - ${VOLUME_ROOT}/zookeeper:/opt/zookeeper-3.4.9/data

  web:
    image: elkozmon/zoonavigator-web:latest
    container_name: zoonavigator-web
    ports:
     - "8000:8000"
    environment:
      API_HOST: "api"
      API_PORT: 9000
    links:
     - api
    depends_on:
     - api
    restart: always

  api:
    image: elkozmon/zoonavigator-api:latest
    container_name: zoonavigator-api
    environment:
      SERVER_HTTP_PORT: 9000
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      LOG4J_LOGGER_KAFKA: WARN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${VOLUME_ROOT}/kafka:/kafka

  mongodb:
    image: mongo:3
    volumes:
      - ${VOLUME_ROOT}/mongodb:/data/db

  instance-management:
    image: sitewhere/service-instance-management:${SW_VERSION}
    env_file:
      - sitewhere-instance.env

  user-management:
    image: sitewhere/service-user-management:${SW_VERSION}
    env_file:
      - sitewhere-instance.env

  tenant-management:
    image: sitewhere/service-tenant-management:${SW_VERSION}
    env_file:
      - sitewhere-instance.env

  device-management:
    image: sitewhere/service-device-management:${SW_VERSION}
    env_file:
      - sitewhere-instance.env

  asset-management:
    image: sitewhere/service-asset-management:${SW_VERSION}
    env_file:
      - sitewhere-instance.env

  web-rest:
    image: sitewhere/service-web-rest:${SW_VERSION}
    ports:
      - "8080:8080"
    env_file:
      - sitewhere-instance.env
